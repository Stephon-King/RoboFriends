{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","useState","setRobots","setSearchfield","useEffect","a","fetch","apiResponse","json","users","console","log","myAsyncFunction","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,8BCSCQ,EAdF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAG3B,OACE,yBAAKC,UAAU,uDACb,yBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,6BACE,4BAAKF,GACL,2BAAIC,MCYGK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAGlB,OACE,6BACGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,kBAAC,EAAD,CACEC,IAAKJ,EAAOG,GAAGR,GACfA,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,aCEbW,EAdG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACI,yBAAKX,UAAY,OAEb,2BACCA,UAAU,sCACTY,KAAK,SACJC,YAAY,gBACXC,SAAUH,MCKXI,EAbA,SAACC,GACd,OACE,yBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,oBACRC,OAAQ,UAETJ,EAAMK,W,YCyCEC,MA5Cf,WACE,MAA4BC,mBAAS,IAArC,mBAAOnB,EAAP,KAAeoB,EAAf,KACA,EAAsCD,mBAAS,IAA/C,mBAAOb,EAAP,KAAoBe,EAApB,KAEAC,qBAAU,YACa,uCAAG,8BAAAC,EAAA,+EAEMC,MACxB,8CAHkB,cAEdC,EAFc,gBAKAA,EAAYC,OALZ,OAKdC,EALc,OAMpBP,EAAUO,GANU,kDAQpBC,QAAQC,IAAR,MARoB,0DAAH,qDAYrBC,KACC,IAEH,IAKMC,EAAiB/B,EAAOgC,QAAO,SAACC,GACpC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS7B,EAAY4B,kBAIvD,OAAQlC,EAAOoC,OAGb,yBAAKxC,UAAU,MACb,wBAAIA,UAAU,SAAd,eAEA,kBAAC,EAAD,CAAWW,aAhBQ,SAAC8B,GAEtBhB,EAAegB,EAAMC,OAAOC,UAe1B,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUvC,OAAQ+B,MAPtB,wBAAInC,UAAU,SAAd,Y,MC/BJ4C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,6BAEE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SAM1B7D,K","file":"static/js/main.8738c73c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nconst Card = ({ name, email, id }) => {\n  // const {} = props;\n\n  return (\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc\">\n      <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n\n\n","import React from \"react\";\nimport Card from \"./Card.js\";\n\nconst CardList = ({ robots }) => { // prop\n  // const cardArray  = ;\n\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={robots[i].id} //need so react will be able to keep tracek of all the items\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\n const SearchBox = ({ searchfield, searchChange}) => {\n    return (\n        <div className = 'pa2'>\n\n            <input\n             className='pa3 ba b--green bg-lightest-blue tc'\n              type='search'\n               placeholder='search robots'\n                onChange={searchChange}\n            />\n        </div>\n    );\n }\n\n export default SearchBox;","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"0.1px solid black\",\n        height: \"800px\",\n      }}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { useState, useEffect } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [robots, setRobots] = useState([]);\n  const [searchfield, setSearchfield] = useState(\"\");\n\n  useEffect(() => {\n    const myAsyncFunction = async () => {\n      try {\n        const apiResponse = await fetch(\n          \"https://jsonplaceholder.typicode.com/users\"\n        );\n        const users = await apiResponse.json();\n        setRobots(users);\n      } catch (rejectResponse) {\n        console.log(rejectResponse);\n      }\n    };\n\n    myAsyncFunction();\n  }, []);\n\n  const onSearchChange = (event) => {\n    // This Is The Function That Modifies The SearchBox Component's State.\n    setSearchfield(event.target.value);\n  };\n\n  const filteredRobots = robots.filter((robot) => {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n\n\n  return !robots.length ? (\n    <h1 className=\"tc f1\">Loading</h1>\n  ) : (\n    <div className=\"tc\">\n      <h1 className=\"tc f1\">RoboFriends</h1>\n\n      <SearchBox searchChange={onSearchChange} />\n      <Scroll>\n        <CardList robots={filteredRobots} />\n      </Scroll>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n// import CardList from './CardList';  will be modifying this to app.js father of all our components\nimport App from \"./containers/App\";\nimport \"tachyons\";\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      {/* <CardList robots={robots}/> changed this to App*/}\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}